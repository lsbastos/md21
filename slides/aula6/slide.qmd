---
title: "MD21 Introdução à Estatística"
subtitle: "TCL"
author: "Leo Bastos"
format: 
  revealjs:
    slide-number: true
    logo: ../../impa-tech-h.png
    footer: '<https://github.com/lsbastos/md21/>'
    theme: simple
    chalkboard: true
editor: visual
---

## Teorema central do limite

Seja $X_1, X_2, \ldots, X_n$ variáveis aleatórias iid com média, $\mathbb{E}[X_i] = \mu$ e variância, $\sigma^2 < \infty$. Seja $\bar{X}_n = \frac{\sum_{i=1}^{n} X_i}{n}$. Então $$Z_n = \frac{(\bar{X}_n - \mu)}{\mathbb{V}(\bar{X}_n)} = \frac{\sqrt{n}(\bar{X}_n - \mu)}{\sigma}  \xrightarrow[n\to \infty]{D} Z$$ onde $Z \sim N(0,1).$

## Teorema central do limite

Uma implicação do TCL é que a distribuição de $\bar{X}_n$ converge para a normal, ou seja $$ \bar{X}_n \xrightarrow{D} X$$ onde $X \sim N(\mu, \sigma^2/n)$.

. . .

Abuso de notação $$ \bar{X}_n \xrightarrow{D} N(\mu, \sigma^2/n)$$

## TCL (Exemplo Gama)

Suponha que $X_1,X_2.\ldots, X_n$ seja uma amostra aleatória com distribuição $Gama(a=4, b=2)$. Ou seja, $$\mathbb{E}[X_i] = a/b = 2, \qquad \mathbb{V}[X_i] = a/b^2 = 1.$$

. . .

Pelo TCL, $$ \bar{X}_n \xrightarrow{D} N\left(\frac{a}{b}=2, \frac{a}{b^2n}=\frac{1}{n} \right)$$

## TCL (Visualizando)

::: panel-tabset
### Gama(4,2)

```{r}
library(ggplot2)

# param = cbind(c(0.5, 1:4), c(0.5, rep(2,3),1))
# labels <- parse(text = sprintf("alpha == %f ~ beta == %f", param[,1], param[,2]))

p <- ggplot() +
  geom_function(fun = dgamma, args = list(shape = 4, rate =2), mapping = aes(colour = "Gamma(4,2)" ) ) +
  geom_vline(xintercept = 2, linetype=2) + 
  # geom_function(fun = dgamma, args = list(shape = param[2,1], scale = param[2,2]), 
  #               mapping = aes(colour = "2", linetype ="2" ) ) +
  # geom_function(fun = dgamma, args = list(shape = param[3,1], scale = param[3,2]), 
  #               mapping = aes(colour = "3", linetype ="3" ) ) +
  # geom_function(fun = dgamma, args = list(shape = param[4,1], scale = param[4,2]), 
  #               mapping = aes(colour = "4", linetype ="4" ) ) +
  # geom_function(fun = dgamma, args = list(shape = param[5,1], scale = param[5,2]), 
  #               mapping = aes(colour = "5", linetype ="5" ) ) +
  # scale_color_manual(values = 1:5, breaks =  1:5, labels = labels) +
  # scale_linetype_manual(values = 1:5, breaks =  1:5, labels = labels) +
  xlim(0,6) +
  labs(
    x = "x",
    y = "f(x)",
    colour = "",
  ) + 
  theme_bw(base_size = 16) + 
    theme(legend.position = c(.8,.75))

p
```

### $N(2, 1/10)$

```{r}
p +
  # xlim(0,4) +
  geom_function(fun = dnorm, args = list(mean = 2, sd =sqrt(1/10)), mapping = aes(colour = "n=10; N(2,1/n)" ) )  
```

### $N(2, 1/50)$

```{r}
p +
  # xlim(0,4) +
  geom_function(fun = dnorm, args = list(mean = 2, sd =sqrt(1/10)), mapping = aes(colour = "n=10; N(2,1/n)" ) ) +
  geom_function(fun = dnorm, args = list(mean = 2, sd =sqrt(1/50)), mapping = aes(colour = "n=50; N(2,1/n)" ) )  
```

### $N(2, 1/500)$

```{r}
p +
  # xlim(0,4) +
  geom_function(fun = dnorm, args = list(mean = 2, sd =sqrt(2/10)), mapping = aes(colour = "n=10; N(2,1/n)" ) ) +
  geom_function(fun = dnorm, args = list(mean = 2, sd =sqrt(2/50)), mapping = aes(colour = "n=50; N(2,1/n)" ) ) +
  geom_function(fun = dnorm, args = list(mean = 2, sd =sqrt(2/500)), mapping = aes(colour = "n=500; N(2,1/n)" ) ) 
```
:::

## TCL (Simulação)

::: incremental
-   gerar $M=1000$ amostras de tamanho $n$ de uma distribuição $Gama(a=4, b=2)$
-   calcular a média para cada amostra
-   vizualizar a distribuição das médias (histograma)
:::

. . .

No R

```{r echo=T}
M = 1000; n = 10
X <- matrix(rgamma(n*M, shape = 4, rate = 2), ncol=M)
c(mean(X[,1]), mean(X[,2]), mean(X[,1000]))
```

. . .

```{r echo=T}
# Calcula medias por coluna
x.mean = apply(X = X, MARGIN = 2, FUN = mean)
x.mean[c(1,2,1000)]
```

## TCL (Simulação)

::: panel-tabset
### $n=10$

```{r}
library(ggplot2)
ggplot() + 
  geom_histogram(data = tibble::tibble(x = x.mean), mapping = aes(x=x, y=..density..), color=1, fill="white", bins = 30) + 
  # geom_density(aes(x=x, color = "Estimated")) + 
  geom_function(fun = dnorm, args = list(mean = 2, sd =sqrt(1/n)), show.legend = T)  +
  theme_bw() +
  labs(
    x = expression(bar(x)),
    y = expression(f(bar(x))),
    colour = ""
    ) 
```

### $n=50$

```{r}
n = 50
x.mean = matrix(rgamma(n*M, shape = 4, rate = 2), ncol=M) |> apply(MARGIN = 2, FUN = mean)
ggplot() + 
  geom_histogram(data = tibble::tibble(x = x.mean), mapping = aes(x=x, y=..density..), color=1, fill="white", bins = 30) + 
  # geom_density(aes(x=x, color = "Estimated")) + 
  geom_function(fun = dnorm, args = list(mean = 2, sd =sqrt(1/n)), show.legend = F )  +
  theme_bw() +
  labs(
    x = expression(bar(x)),
    y = expression(f(bar(x))),
    colour = ""
    ) 
```

### $n=100$

```{r}
n = 100
x.mean = matrix(rgamma(n*M, shape = 4, rate = 2), ncol=M) |> apply(MARGIN = 2, FUN = mean)
ggplot() + 
  geom_histogram(data = tibble::tibble(x = x.mean), mapping = aes(x=x, y=..density..), color=1, fill="white", bins = 30) + 
  # geom_density(aes(x=x, color = "Estimated")) + 
  geom_function(fun = dnorm, args = list(mean = 2, sd =sqrt(1/n)), show.legend = F )  +
  theme_bw() +
  labs(
    x = expression(bar(x)),
    y = expression(f(bar(x))),
    colour = ""
    ) 
```

### $n=500$

```{r}
n = 500
x.mean = matrix(rgamma(n*M, shape = 4, rate = 2), ncol=M) |> apply(MARGIN = 2, FUN = mean)
ggplot() + 
  geom_histogram(data = tibble::tibble(x = x.mean), mapping = aes(x=x, y=..density..), color=1, fill="white", bins = 30) + 
  # geom_density(aes(x=x, color = "Estimated")) + 
  geom_function(fun = dnorm, args = list(mean = 2, sd =sqrt(1/n)), show.legend = F )  +
  theme_bw() +
  labs(
    x = expression(bar(x)),
    y = expression(f(bar(x))),
    colour = ""
    ) 
```
:::

## Prova do TCL

Existem várias provas do TCL, a mais popular é via função geradora de momentos.

<!-- ## Método Delta -->
